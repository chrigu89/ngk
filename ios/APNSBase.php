<?php
class APNSBase {

    /**
   * Defines wether Push Notification should be send
   * in test mode while developing or in production
   * mode when the app is released.
   * Possible values:
   * $_ENVIROMENT['development'] or $_ENVIROMENT['production']
   *
   * @var string
   */
  protected $_enviroment = 'development';

  /**
   * Path to the private key file
   *
   * @var string
   */
  protected $_privateKey = '';

  /**
   * Passphrase for the private key
   * If you set a passphrase when you generated
   * the private key you need to set it.
   * Otherwise leave the passphrase blank.
   *
   * @var string
   */
  protected $_privateKeyPassphrase = '';


   /**
   * Initializes a Push Notification with an
   * enviroment.
   * Valid values: development, production
   *
   * @param string $enviroment (production or developement)
   */
  public function __construct($enviroment)
  {
    if($enviroment !== 'development' && $enviroment !== 'production')
      throw new Exception('The Enviroment needs to be set to either development oder production');

    $this->_enviroment = $enviroment;
  }

  /**
   * Path to the private key file generated by
   * Apple
   *
   * @param string $privateKey
   */
  public function setPrivateKey($privateKey)
  {

    # Only accepts valid files
    if($this->_checkPrivateKey($privateKey) === false)
      throw new Exception('The Path to the private key is invalid.');

    $this->_privateKey = $privateKey;
  }

  /**
   * Passphrase for the specified private key
   *
   * @param string $privateKeyPassphrase
   */
  public function setPrivateKeyPassphrase($privateKeyPassphrase)
  {
    $this->_privateKeyPassphrase = $privateKeyPassphrase;
  }

  /**
   * Checks wether the private Key
   * is a valid file
   *
   * @param string $privateKey
   * @return bool
   */
  protected function _checkPrivateKey($privateKey)
  {
    if(trim($privateKey) !== '' && file_exists($privateKey))
      return true;
    else
      return false;
  }
}

?>